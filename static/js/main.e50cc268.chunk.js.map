{"version":3,"sources":["common/pitch.ts","common/elements.ts","common/chords.ts","common/matching.ts","common/player.ts","components/KeyedScaleChart.tsx","components/KeyedScalesChartWithSelectedNotes.tsx","components/NoteSelector.tsx","feature/ChordsByKeysFeature.tsx","common/scales.ts","components/KeyedScaleChartWithChords.tsx","components/ScaleSelector.tsx","feature/ChordsInScaleFeature.tsx","components/KeyedScalesChartWithCommonChords.tsx","feature/CommonChordsForScales.tsx","index.tsx","App.tsx"],"names":["C","CIS","D","DIS","E","F","FIS","G","GIS","A","AIS","B","PITCHES","Array","from","keys","getPitch","index","Error","Scale","name","steps","Object","classCallCheck","this","createClass","key","value","length","root","KeyedScale","result","temp","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","push","err","return","Chord","_Scale","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","Interval","_Chord","get","prototype","call","scale","concat","getName","generate","delta","transpose","INTERVAL_MINOR_2","INTERVAL_MAJOR_2","INTERVAL_MINOR_3","INTERVAL_MAJOR_3","INTERVAL_PERFECT_4","INTERVAL_TRITONE","INTERVAL_PERFECT_5","INTERVAL_MINOR_6","INTERVAL_MAJOR_6","INTERVAL_MINOR_7","INTERVAL_MAJOR_7","ALL_CHORDS","containsAllPitches","scalePitches","chordPitches","scalePitchesNormalized","map","a","filter","includes","sort","b","t1","getScale","getSize","t2","synth","Tone","PolySynth","FMSynth","toMaster","playAsHuman","timeFactor","Transport","stop","start","octave","pitches","i","iStartTime","iEndTime","triggerAttack","triggerRelease","play","playAsChord","playAsScale","KeyedScaleChart","props","_useState","useState","_useState2","slicedToArray","playing","setPlaying","react","className","getType","getRoot","disabled","onClick","setTimeout","pitch","classes","KeyedScalesChartWithSelectedNotes","chords","_loop3","forEach","chord","keyedChord","withKey","getAllMatchingChordsWithPitches","role","KeyedScaleChart_KeyedScaleChart","NoteSelector","Set","selectedPitches","setSelectedPitches","useEffect","initialValue","onNoteSelectionChange","react_default","createElement","type","id","checked","has","onChange","e","newSelectedPitches","add","delete","setSelected","target","htmlFor","ChordsByKeysFeature","selectedNotes","setSelectedNotes","NoteSelector_NoteSelector","selection","KeyedScalesChartWithSelectedNotes_KeyedScalesChartWithSelectedNotes","IONIAN_SCALE","PHRYGIAN_SCALE","DORIAN_SCALE","LYDIAN_SCALE","MIXOLYDIAN_SCALE","AEOLIAN_SCALE","LOCRIAN_SCALE","WHOLETONE_SCALE","HUNGARIAN","GYPSY","BYZANTINE","HINDU","ARABIAN","ORIENTAL","JAVANESE","IN_SEN","IWATO","BALINESE","ALL_SCALES","KeyedScaleChartWithChords","_loop","getAllMatchingChords","ScaleSelector","classes1","selectedKey","isPitchSelected","onKeyChange","classes2","selectedScale","isScaleSelected","onScaleChange","ChordsInScaleFeature","setPitch","_useState3","_useState4","setScale","ScaleSelector_ScaleSelector","KeyedScaleChartWithChords_KeyedScaleChartWithChords","KeyedScalesChartWithCommonChords","scale1","scale2","_loop2","scale1Pitches","scale2Pitches","getAllCommonChords","CommonChordsForScales","pitch1","setPitch1","pitch2","setPitch2","_useState5","_useState6","setScale1","_useState7","_useState8","setScale2","KeyedScalesChartWithCommonChords_KeyedScalesChartWithCommonChords","ReactDOM","render","react_router_dom","href","to","react_router","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.e50cc268.chunk.js","sourcesContent":["export type Pitch = number;\n\nexport const C = 0 as Pitch;\nexport const CIS = 1 as Pitch;\nexport const D = 2 as Pitch;\nexport const DIS = 3 as Pitch;\nexport const E = 4 as Pitch;\nexport const F = 5 as Pitch;\nexport const FIS = 6 as Pitch;\nexport const G = 7 as Pitch;\nexport const GIS = 8 as Pitch;\nexport const A = 9 as Pitch;\nexport const AIS = 10 as Pitch;\nexport const B = 11 as Pitch;\n\nexport const PITCHES = Array.from(Array(12).keys()) as Pitch[];\n\nexport function getPitchWithOctave(index: Pitch, octave: number): string {\n    const pitch = getPitch(index);\n    const octaveFixed = octave + (index / 12);\n    return pitch + octaveFixed;\n}\n\nexport function getPitch(index: number): string {\n    switch (index % 12) {\n        case C:\n            return \"C\";\n        case CIS:\n            return \"C#\";\n        case D:\n            return \"D\";\n        case DIS:\n            return \"D#\";\n        case E:\n            return \"E\";\n        case F:\n            return \"F\";\n        case FIS:\n            return \"F#\";\n        case G:\n            return \"G\";\n        case GIS:\n            return \"G#\";\n        case A:\n            return \"A\";\n        case AIS:\n            return \"A#\";\n        case B:\n            return \"B\";\n        default:\n            throw new Error(\"Invalid pitch\");\n    }\n}\n\nexport function isBlack(index: number): boolean {\n    return [CIS, DIS, FIS, GIS, AIS].includes(index % 12);\n}\n","import {getPitch} from \"./pitch\";\n\nexport class Scale {\n    private readonly name: string;\n    private readonly steps: number[];\n\n    constructor(name: string, steps: number[]) {\n        this.name = name;\n        this.steps = steps;\n    }\n\n    getName(): string {\n        return this.name;\n    }\n\n    getType(): string {\n        return \"default\";\n    }\n\n    getSize(): number {\n        return this.steps.length + 1;\n    }\n\n    withKey(root: number): KeyedScale {\n        return new KeyedScale(this, root);\n    }\n\n    generate(root: number): number[] {\n        const result = [root];\n        let temp = root;\n\n        for (let step of this.steps) {\n            temp = temp + step;\n            result.push(temp);\n        }\n\n        return result;\n    }\n}\n\nexport class Chord extends Scale {\n    getType(): string {\n        return \"primary\";\n    }\n}\n\nexport class Interval extends Chord {\n    getName(): string {\n        return \"Interval \" + super.getName();\n    }\n\n    getType(): string {\n        return \"secondary\";\n    }\n}\n\nexport class KeyedScale {\n    private readonly scale: Scale;\n    private readonly root: number;\n\n    constructor(scale: Scale, root: number) {\n        this.scale = scale;\n        this.root = root;\n    }\n\n    getName(): string {\n        return `${getPitch(this.root)} ${this.scale.getName()}`;\n    }\n\n    getRoot(): number {\n        return this.root;\n    }\n\n    getScale(): Scale {\n        return this.scale;\n    }\n\n    generate(): number[] {\n        return this.scale.generate(this.root);\n    }\n\n    transpose(delta: number): KeyedScale {\n        return new KeyedScale(this.scale, this.root + delta);\n    }\n\n    up(): KeyedScale {\n        return this.transpose(1);\n    }\n\n    down(): KeyedScale {\n        return this.transpose(-1);\n    }\n}","import {Chord, Interval} from \"./elements\";\n\nexport const INTERVAL_MINOR_2 = new Interval(\"m2\", [1]);\nexport const INTERVAL_MAJOR_2 = new Interval(\"M2\", [2]);\nexport const INTERVAL_MINOR_3 = new Interval(\"m3\", [3]);\nexport const INTERVAL_MAJOR_3 = new Interval(\"M3\", [4]);\nexport const INTERVAL_PERFECT_4 = new Interval(\"4\", [5]);\nexport const INTERVAL_TRITONE = new Interval(\"b5\", [6]);\nexport const INTERVAL_PERFECT_5 = new Interval(\"5\", [7]);\nexport const INTERVAL_MINOR_6 = new Interval(\"m6\", [8]);\nexport const INTERVAL_MAJOR_6 = new Interval(\"M6\", [9]);\nexport const INTERVAL_MINOR_7 = new Interval(\"m7\", [10]);\nexport const INTERVAL_MAJOR_7 = new Interval(\"M7\", [11]);\n\nexport const MAJOR = new Chord(\"Major\", [4, 3]);\nexport const MAJOR_6TH = new Chord(\"Major 6th\", [4, 3, 2]);\nexport const MAJOR_7TH = new Chord(\"Major 7th\", [4, 3, 4]);\nexport const DOMINANT_7TH = new Chord(\"Dominant 7th\", [4, 3, 3]);\nexport const MINOR = new Chord(\"Minor\", [3, 4]);\nexport const MINOR_6TH = new Chord(\"Minor 6th\", [3, 4, 2]);\nexport const MINOR_7TH = new Chord(\"Minor 7th\", [3, 4, 3]);\nexport const DIMINISHED = new Chord(\"Diminished\", [3, 3]);\nexport const DIMINISHED_7TH = new Chord(\"Diminished 7th\", [3, 3, 3]);\nexport const AUGMENTED = new Chord(\"Augmented\", [4, 4]);\nexport const AUGMENTED_7TH = new Chord(\"Augmented 7th\", [4, 4, 2]);\nexport const SUSTAIN_4 = new Chord(\"Suspended 4th\", [5, 2]);\nexport const SUSTAIN_2 = new Chord(\"Suspended 2nd\", [2, 5]);\nexport const SUSTAIN_7TH_4 = new Chord(\"Suspended 7th 4th\", [5, 2, 2]);\nexport const SUSTAIN_7TH_2 = new Chord(\"Suspended 7th 2nd\", [2, 5, 2]);\nexport const MAJOR_9TH = new Chord(\"Major 9th\", [4, 3, 4, 3]);\nexport const MINOR_9TH = new Chord(\"Minor 9th\", [4, 3, 4, 3]);\n\nexport const ALL_CHORDS = [\n    MAJOR, MAJOR_6TH, MAJOR_7TH, DOMINANT_7TH,\n    MINOR, MINOR_6TH, MINOR_7TH,\n    DIMINISHED, DIMINISHED_7TH, AUGMENTED, AUGMENTED_7TH,\n    SUSTAIN_4, SUSTAIN_2, SUSTAIN_7TH_4, SUSTAIN_7TH_2,\n    MAJOR_9TH, MINOR_9TH,\n    INTERVAL_MINOR_2, INTERVAL_MAJOR_2,\n    INTERVAL_MINOR_3, INTERVAL_MAJOR_3,\n    INTERVAL_PERFECT_4, INTERVAL_TRITONE, INTERVAL_PERFECT_5,\n    INTERVAL_MINOR_6, INTERVAL_MAJOR_6,\n    INTERVAL_MINOR_7, INTERVAL_MAJOR_7\n];","import {ALL_CHORDS} from \"./chords\";\nimport {KeyedScale} from \"./elements\";\nimport {Pitch} from \"./pitch\";\n\nfunction containsAllPitches(scalePitches: Pitch[], chordPitches: Pitch[]) {\n    const scalePitchesNormalized = scalePitches.map(a => a % 12);\n    const chordPitchesNormalized = chordPitches.map(a => a % 12);\n    const chordPitchesNotInScale = chordPitchesNormalized.filter(a => !scalePitchesNormalized.includes(a));\n    return chordPitchesNotInScale.length === 0;\n}\n\nexport function getAllMatchingChords(scale: KeyedScale): KeyedScale[] {\n    const result: KeyedScale[] = [];\n    for (let root = 0; root < 12; root++) {\n        ALL_CHORDS.forEach(chord => {\n            const scalePitches = scale.generate();\n            let keyedChord = chord.withKey(root);\n            const chordPitches = keyedChord.generate();\n\n            if (containsAllPitches(scalePitches, chordPitches)) {\n                result.push(keyedChord);\n            }\n        });\n    }\n    sort(result);\n    return result;\n}\n\nexport function getAllCommonChords(scale1: KeyedScale, scale2: KeyedScale): KeyedScale[] {\n    const result: KeyedScale[] = [];\n    for (let root = 0; root < 12; root++) {\n        ALL_CHORDS.forEach(chord => {\n            const scale1Pitches = scale1.generate();\n            const scale2Pitches = scale2.generate();\n            let keyedChord = chord.withKey(root);\n            const chordPitches = keyedChord.generate();\n\n            if (containsAllPitches(scale1Pitches, chordPitches) && containsAllPitches(scale2Pitches, chordPitches)) {\n                result.push(keyedChord);\n            }\n        });\n    }\n    sort(result);\n    return result;\n}\n\nexport function getAllMatchingChordsWithPitches(pitches: number[]): KeyedScale[] {\n    const result: KeyedScale[] = [];\n    for (let root = 0; root < 12; root++) {\n        ALL_CHORDS.forEach(chord => {\n            let keyedChord = chord.withKey(root);\n            const chordPitches = keyedChord.generate();\n\n            if (containsAllPitches(pitches, chordPitches)) {\n                result.push(keyedChord);\n            }\n        });\n    }\n    sort(result);\n    return result;\n}\n\nfunction sort(result: KeyedScale[]) {\n    result.sort((a: KeyedScale, b: KeyedScale) => {\n        const t1 = a.getScale().getSize();\n        const t2 = b.getScale().getSize();\n        if (t1 < t2) {\n            return 1;\n        } else if (t2 < t1) {\n            return -1;\n        } else {\n            return a.getName() < b.getName() ? -1 : a.getName() > b.getName() ? 1 : 0;\n        }\n    });\n}\n","import Tone from \"tone\";\nimport {KeyedScale} from \"./elements\";\nimport {getPitchWithOctave} from \"./pitch\";\n\nconst synth = new Tone.PolySynth(6, Tone.FMSynth).toMaster();\n\nfunction playAsChord(scale: KeyedScale) {\n    playAsHuman(scale, 0.01);\n}\n\nfunction playAsScale(scale: KeyedScale) {\n    playAsHuman(scale, 0.07);\n}\n\nfunction playAsHuman(scale: KeyedScale, timeFactor: number) {\n    Tone.Transport.stop(0);\n    Tone.Transport.start(0);\n    const pitches = scale.generate();\n\n    for (let i = 0; i < pitches.length; i++) {\n        const iStartTime = i * timeFactor;\n        const iEndTime = iStartTime + timeFactor;\n        const name = getPitchWithOctave(pitches[i], 4);\n        synth.triggerAttack([name], \"+\" + iStartTime);\n        synth.triggerRelease([name], \"+\" + iEndTime);\n    }\n}\n\nexport function play(scale: KeyedScale) {\n    const pitches = scale.generate();\n    if (pitches.length <= 4) {\n        playAsChord(scale);\n    } else {\n        playAsScale(scale);\n    }\n}","import * as React from \"react\";\nimport {useState} from \"react\";\nimport {KeyedScale} from \"../common/elements\";\nimport {getPitch, isBlack} from \"../common/pitch\";\nimport {play} from \"../common/player\";\n\ntype Props = {\n    scale: KeyedScale\n}\n\nexport const KeyedScaleChart: React.FC<Props> = (props) => {\n    const [playing, setPlaying] = useState(false);\n\n    function playScale() {\n        setPlaying(true);\n        play(props.scale);\n        setTimeout(() => setPlaying(false), 200);\n    }\n\n    return (\n        <div className={\"card m-2\" + (props.scale.getScale().getType()==='secondary' ? \" \" : \" bg-light\")+ (playing ? \" border-primary\" : \" \")}>\n            <div className=\"card-body\">\n                <div className=\"row no-gutters\">\n                    <div className=\"col-10 p-1\">\n                        <b>{getPitch(props.scale.getRoot())}</b>\n                        {\" \"}\n                        <small>{props.scale.getScale().getName()}</small>\n                    </div>\n                    <div className=\"col-2 p-1 text-right\">\n                        <button className=\"btn btn-sm\" disabled={playing} onClick={() => playScale()}>\n                            <small>&#9654;</small>\n                        </button>\n                    </div>\n                    <div className=\"col-12 p-1\">\n                        {props.scale.generate().map((pitch) => {\n                            const classes = isBlack(pitch) ? \"badge badge-dark mr-1 pt-3\" : \"badge badge-secondary mr-1 pt-3\";\n                            return (<span key={pitch} className={classes}>{getPitch(pitch)}</span>);\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import * as React from \"react\";\nimport {getAllMatchingChordsWithPitches} from \"../common/matching\";\nimport {KeyedScaleChart} from \"./KeyedScaleChart\";\n\ntype Props = {\n    pitches: number[]\n}\n\nexport const KeyedScalesChartWithSelectedNotes: React.FC<Props> = (props) => {\n    const chords = getAllMatchingChordsWithPitches(props.pitches);\n\n    if (!chords || chords.length < 1) {\n        return (\n            <div className=\"alert alert-secondary\" role=\"alert\">\n                No results. Please make sure to select at least two notes.\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <div className=\"row\">\n                {chords.map(scale => {\n                    return (\n                        <div key={scale.getName()} className=\"col-3\">\n                            <KeyedScaleChart scale={scale}/>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n","import React, {useEffect, useState} from \"react\";\nimport {C, E, G, getPitch, Pitch, PITCHES} from \"../common/pitch\";\n\nexport interface NoteSelectorProps {\n    onNoteSelectionChange: (selection: Pitch[]) => void\n}\n\nexport const NoteSelector: React.FC<NoteSelectorProps> = (props) => {\n    const [selectedPitches, setSelectedPitches] = useState(new Set<Pitch>());\n\n    function setSelected(pitch: Pitch, value: boolean) {\n        const newSelectedPitches = new Set(selectedPitches);\n        if (value) {\n            newSelectedPitches.add(pitch);\n        } else {\n            newSelectedPitches.delete(pitch);\n        }\n        setSelectedPitches(newSelectedPitches);\n        props.onNoteSelectionChange(Array.from(newSelectedPitches));\n    }\n\n    useEffect(() => {\n        const initialValue = new Set<Pitch>([C, E, G]);\n        setSelectedPitches(initialValue);\n        props.onNoteSelectionChange(Array.from(initialValue));\n    }, []);\n\n    function refresh() {\n\n    }\n\n    return (\n        <section>\n            <p>\n                {PITCHES.map((pitch) => {\n                    return (\n                        <div className=\"form-check form-check-inline form-control-lg\">\n                            <input\n                                type=\"checkbox\"\n                                id={`pitch-${pitch}`}\n                                className=\"form-check-input\"\n                                checked={selectedPitches.has(pitch)}\n                                onChange={(e) => setSelected(pitch, e.target.checked)}\n                                value={pitch}/>\n                            <label\n                                htmlFor={`pitch-${pitch}`}\n                                className=\"form-check-label\">\n                                {getPitch(pitch)}\n                            </label>\n                        </div>\n                    );\n                })}\n            </p>\n        </section>\n    );\n};\n","import React, {useState} from \"react\";\nimport {KeyedScalesChartWithSelectedNotes} from \"../components/KeyedScalesChartWithSelectedNotes\";\nimport {NoteSelector} from \"../components/NoteSelector\";\n\nexport const ChordsByKeysFeature: React.FC = () => {\n    const [selectedNotes, setSelectedNotes] = useState([] as number[]);\n\n    return (\n        <section className=\"p-3\">\n            <div className=\"jumbotron\">\n                <p className=\"lead\">Shows all chords that contain the given notes.</p>\n\n                <hr className=\"my-4\"/>\n\n                <h3>Select Notes</h3>\n\n                <NoteSelector onNoteSelectionChange={(selection) => setSelectedNotes(selection)}/>\n            </div>\n\n            <h3>Chords in selected scale</h3>\n\n            <KeyedScalesChartWithSelectedNotes pitches={selectedNotes}/>\n        </section>\n    );\n};\n","import {Scale} from \"./elements\";\n\n/**\n * Sources\n * =======\n *\n * https://lotusmusic.com/lm_exoticscales.html\n * https://guitarsix.com/blog/lessons/piano-chords/241/1/\n * https://en.wikipedia.org/wiki/Mode_(music)\n */\n\nexport const IONIAN_SCALE = new Scale(\"Ionian (major)\", [2, 2, 1, 2, 2, 2, 1]);\nexport const PHRYGIAN_SCALE = new Scale(\"Phrygian\", [1, 2, 2, 2, 1, 2, 2]);\nexport const DORIAN_SCALE = new Scale(\"Dorian\", [2, 1, 2, 2, 2, 1, 2]);\nexport const LYDIAN_SCALE = new Scale(\"Lydian\", [2, 2, 2, 1, 2, 2, 1]);\nexport const MIXOLYDIAN_SCALE = new Scale(\"Mixolydian\", [2, 2, 1, 2, 2, 1, 2]);\nexport const AEOLIAN_SCALE = new Scale(\"Aeolian (minor)\", [2, 1, 2, 2, 1, 2, 2]);\nexport const LOCRIAN_SCALE = new Scale(\"Locrian\", [1, 2, 2, 1, 2, 2, 2]);\n\nexport const WHOLETONE_SCALE = new Scale(\"Wholetone\", [2, 2, 2, 2, 2]);\n\nexport const HUNGARIAN = new Scale(\"Hungarian\", [1, 3, 3, 1, 3, 1]);\nexport const GYPSY = new Scale(\"Gypsy\", [1, 3, 1, 3, 1, 3, 1]);\nexport const BYZANTINE = new Scale(\"Byzantine\", [2, 3, 1, 2, 1, 3, 1]);\nexport const HINDU = new Scale(\"Hindu\", [2, 2, 1, 2, 1, 2, 2]);\nexport const ARABIAN = new Scale(\"Arabian\", [2, 2, 1, 1, 2, 2, 2]);\nexport const ORIENTAL = new Scale(\"Oriental\", [1, 3, 1, 1, 3, 1, 2]);\nexport const JAVANESE = new Scale(\"Javanese\", [2, 2, 2, 1, 1, 2, 2]);\nexport const IN_SEN = new Scale(\"In Sen\", [1, 2 + 2, 2, 2 + 1, 2]);\nexport const IWATO = new Scale(\"Iwato\", [1, 2 + 2, 1, 2 + 2, 2]);\nexport const BALINESE = new Scale(\"Balinese\", [1, 2, 2 + 2, 1, 2 + 2]);\n\nexport const ALL_SCALES = [\n    IONIAN_SCALE, PHRYGIAN_SCALE, DORIAN_SCALE, LYDIAN_SCALE, MIXOLYDIAN_SCALE, AEOLIAN_SCALE, LOCRIAN_SCALE,\n    WHOLETONE_SCALE,\n    HUNGARIAN, GYPSY, BYZANTINE, HINDU, ARABIAN, ORIENTAL, JAVANESE, IN_SEN, IWATO, BALINESE\n];","import * as React from \"react\";\nimport {KeyedScale} from \"../common/elements\";\nimport {getAllMatchingChords} from \"../common/matching\";\nimport {KeyedScaleChart} from \"./KeyedScaleChart\";\n\ntype Props = {\n    scale: KeyedScale\n}\n\nexport const KeyedScaleChartWithChords: React.FC<Props> = (props) => {\n    const chords = getAllMatchingChords(props.scale);\n\n    if (!chords || chords.length < 1) {\n        return (\n            <div className=\"alert alert-secondary\" role=\"alert\">\n                Could not find any known chords for this scale.\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <div className=\"row\">\n                {chords.map(scale => {\n                    return (\n                        <div key={scale.getName()} className=\"col-3\">\n                            <KeyedScaleChart scale={scale}/>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport {Scale} from \"../common/elements\";\nimport {getPitch, PITCHES} from \"../common/pitch\";\nimport {ALL_SCALES} from \"../common/scales\";\nimport {KeyedScaleChart} from \"./KeyedScaleChart\";\n\ntype Props = {\n    selectedKey?: number,\n    selectedScale?: Scale,\n    onKeyChange: (selectedKey: number) => void\n    onScaleChange: (selectedScale: Scale) => void\n}\n\nexport const ScaleSelector: React.FC<Props> = (props) => {\n    function isPitchSelected(pitch: number) {\n        if (props.selectedKey === undefined) {\n            return false;\n        }\n        return props.selectedKey === pitch;\n    }\n\n    function isScaleSelected(scale: Scale) {\n        if (props.selectedScale === undefined) {\n            return false;\n        }\n        return scale.getName() === props.selectedScale!.getName();\n    }\n\n    return (\n        <section>\n            <div className=\"row align-items-start justify-content-start\">\n                <div className=\"col-auto\">\n                    <p className=\"btn-group-sm\">\n                        {PITCHES.map(pitch => {\n                            const classes1 = isPitchSelected(pitch) ? \"active btn btn-secondary btn-sm m-1\" : \"btn btn-secondary btn-sm m-1\";\n                            return <button key={pitch}\n                                           className={classes1}\n                                           onClick={() => props.onKeyChange(pitch)}>{getPitch(pitch)}</button>;\n                        })}\n                    </p>\n                </div>\n            </div>\n            <div className=\"row align-items-start justify-content-start\">\n                <div className=\"col-auto\">\n                    <p className=\"btn-group-sm\">\n                        {ALL_SCALES.map(scale => {\n                            const classes2 = isScaleSelected(scale) ? \"active btn btn-primary btn-sm m-1\" : \"btn btn-primary btn-sm m-1\";\n                            return <button key={scale.getName()}\n                                           className={classes2}\n                                           onClick={() => props.onScaleChange(scale)}>{scale.getName()}</button>;\n                        })}\n                    </p>\n                </div>\n            </div>\n            <div className=\"row align-items-start justify-content-start\">\n                <div className=\"col-auto\">\n                    {props.selectedScale !== undefined && props.selectedKey !== undefined &&\n                    <KeyedScaleChart scale={props.selectedScale!.withKey(props.selectedKey!)}/>}\n                </div>\n            </div>\n        </section>\n    );\n};\n","import React, {useState} from \"react\";\nimport {C} from \"../common/pitch\";\nimport {IONIAN_SCALE} from \"../common/scales\";\nimport {KeyedScaleChartWithChords} from \"../components/KeyedScaleChartWithChords\";\nimport {ScaleSelector} from \"../components/ScaleSelector\";\n\nexport const ChordsInScaleFeature: React.FC = () => {\n    const [pitch, setPitch] = useState(C);\n    const [scale, setScale] = useState(IONIAN_SCALE);\n\n    return (\n        <section className=\"p-3\">\n            <div className=\"jumbotron\">\n                <p className=\"lead\">Shows all chords in the selected scale.</p>\n\n                <hr className=\"my-4\"/>\n\n                <h3>Select Scale</h3>\n\n                <ScaleSelector\n                    selectedKey={pitch}\n                    selectedScale={scale}\n                    onKeyChange={(pitch) => setPitch(pitch)}\n                    onScaleChange={(scale) => setScale(scale)}/>\n            </div>\n\n            <h3>Chords in selected scale</h3>\n\n            <KeyedScaleChartWithChords scale={scale.withKey(pitch)}/>\n        </section>\n    );\n};","import * as React from \"react\";\nimport {KeyedScale} from \"../common/elements\";\nimport {getAllCommonChords} from \"../common/matching\";\nimport {KeyedScaleChart} from \"./KeyedScaleChart\";\n\ntype Props = {\n    scale1: KeyedScale,\n    scale2: KeyedScale\n}\n\nexport const KeyedScalesChartWithCommonChords: React.FC<Props> = (props) => {\n    const chords = getAllCommonChords(props.scale1, props.scale2);\n\n    if (!chords || chords.length < 1) {\n        return (\n            <div className=\"alert alert-secondary\" role=\"alert\">\n                It is possible that these scales have no chords in common.\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <div className=\"row\">\n                {chords.map(scale => {\n                    return (\n                        <div key={scale.getName()} className=\"col-3\">\n                            <KeyedScaleChart scale={scale}/>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n","import React, {useState} from \"react\";\nimport {C} from \"../common/pitch\";\nimport {DORIAN_SCALE, IONIAN_SCALE} from \"../common/scales\";\nimport {KeyedScalesChartWithCommonChords} from \"../components/KeyedScalesChartWithCommonChords\";\nimport {ScaleSelector} from \"../components/ScaleSelector\";\n\nexport const CommonChordsForScales: React.FC = () => {\n    const [pitch1, setPitch1] = useState(C);\n    const [pitch2, setPitch2] = useState(C);\n    const [scale1, setScale1] = useState(IONIAN_SCALE);\n    const [scale2, setScale2] = useState(DORIAN_SCALE);\n\n    return (\n        <section className=\"p-3\">\n            <div className=\"jumbotron\">\n                <p className=\"lead\">Shows all chords that the two selected scales have in common.</p>\n\n                <hr className=\"my-4\"/>\n\n                <h3>Select first scale</h3>\n\n                <ScaleSelector\n                    selectedKey={pitch1}\n                    selectedScale={scale1}\n                    onKeyChange={(pitch) => setPitch1(pitch)}\n                    onScaleChange={(scale) => setScale1(scale)}/>\n\n                <hr className=\"my-4\"/>\n\n                <h3>Select second scale</h3>\n\n                <ScaleSelector\n                    selectedKey={pitch2}\n                    selectedScale={scale2}\n                    onKeyChange={(pitch) => setPitch2(pitch)}\n                    onScaleChange={(scale) => setScale2(scale)}/>\n            </div>\n\n            <h3>Chords in both selected scales</h3>\n\n            <KeyedScalesChartWithCommonChords\n                scale1={scale1.withKey(pitch1)}\n                scale2={scale2.withKey(pitch2)}/>\n        </section>\n    );\n};\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {App} from \"./App\";\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));","import React from \"react\";\nimport {BrowserRouter, NavLink, Redirect, Route} from \"react-router-dom\";\nimport {ChordsByKeysFeature} from \"./feature/ChordsByKeysFeature\";\nimport {ChordsInScaleFeature} from \"./feature/ChordsInScaleFeature\";\nimport {CommonChordsForScales} from \"./feature/CommonChordsForScales\";\n\nexport const App: React.FC = () => {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n                    <div className=\"container\">\n                        <a className=\"navbar-brand\" href=\"/armony\">🎹 Armony</a>\n                        <ul className=\"navbar-nav\">\n                            <li className=\"nav-item\">\n                                <NavLink className=\"nav-link\" to=\"/armony/scale-to-chords\">Scale to Chords</NavLink>\n                            </li>\n                            <li className=\"nav-item\">\n                                <NavLink className=\"nav-link\" to=\"/armony/notes-to-chords\">Notes to Chords</NavLink>\n                            </li>\n                            <li className=\"nav-item\">\n                                <NavLink className=\"nav-link\" to=\"/armony/common-chords\">Common Chords</NavLink>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n                <div className=\"container\">\n                    <Route exact path=\"/armony/scale-to-chords\" component={ChordsInScaleFeature}/>\n                    <Route exact path=\"/armony/notes-to-chords\" component={ChordsByKeysFeature}/>\n                    <Route exact path=\"/armony/common-chords\" component={CommonChordsForScales}/>\n                    <Redirect to=\"/armony/scale-to-chords\"/>\n                </div>\n            </BrowserRouter>\n        </div>\n    );\n};\n"],"sourceRoot":""}